continue
self.questions
continue
self.questions
exit
@routine.questions
next
continue
contiue
@routine.questions
continue
@routine.questions
continue
@routine
continue
@routine
exit
@routine.save!
@routine.template = false
@routine.user = current_user
@routine.questions
@routine
@routine = @template.deep_clone include:[:questions, {questions: :question_choices}]
@template
continue
next
continue
params
exit
params
exit
value
exit
eit
value
choice
exit
question.exit
choice
exit
choice
continue
Field.stored_answer(@answer.id, question.id)
continue
Field.stored_answer(@answer.id, question.id)
continue
field
continue
field.name.nil?
field
continue
field.name.nil?
field.name.exists?
field.name.empty?
field
field.name.nil??
field.name
field.nil?
field
continue
self.question_choices.any?
self.question_choices
self.type
self.class
self.questions_choices.any?
continue
@question.save!
continue
@question.save!
@question.question_choices
@question
continue
next
exit
next
params
continue
@question
exit
continue
next
exit
continue
next
@question_type.name == 'multiple choice'
@question_type.name
continue
@routine.user == current_user
@routine-user == current_user
continue
exit
record
@questions
@question
exit
params[:date]
params[:date].to_date
params[:date]
params
exit
params
exit
continue
@questions.last
@questions.first
exit
@questions.last
exit
@questions.last
exit
@questions
@questions.last
@routine.questions.last
continue
@routine
exit
params
exit
params[:routine]
params
exit
value[:id]
value
key
exit
params[:order]
params[:order]["0"]
params[:order]
params
exit
params
exit
params
exit
params
exit
params
continue
exit
continue
exit
@questions.empty?
@questions.uestions.empty?
